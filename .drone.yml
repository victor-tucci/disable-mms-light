---
{
   "kind": "pipeline",
   "name": "Debian (w/ tests) (amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=ON -DBUILD_TESTS=ON ",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest",
            "mkdir -v -p $$HOME/.oxen",
            "GTEST_COLOR=1 ctest --output-on-failure -j6"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian Debug (amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Debug -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON ",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian clang-11 (amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache clang-11 libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=ON -DBUILD_TESTS=ON -DCMAKE_C_COMPILER=clang-11 -DCMAKE_CXX_COMPILER=clang++-11 ",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian gcc-10 (amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++-10 libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON -DCMAKE_C_COMPILER=gcc-10 -DCMAKE_CXX_COMPILER=g++-10 -DBUILD_DEBUG_UTILS=ON",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:testing",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian buster (i386)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON -DDOWNLOAD_SODIUM=ON -DARCH_ID=i386",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "i386/debian:buster",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Ubuntu focal (amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON ",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:focal",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian (ARM64)",
   "platform": {
      "arch": "arm64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF ",
            "ninja -j1 rpc wallet -v",
            "ninja -j2 daemon device_trezor -v",
            "ninja -j1 wallet_rpc_server -v",
            "ninja -j2 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Debian buster (armhf)",
   "platform": {
      "arch": "arm64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ libsystemd-dev libboost-thread-dev libgtest-dev libboost-serialization-dev libboost-program-options-dev libunbound-dev nettle-dev libevent-dev libminiupnpc-dev libunwind8-dev libsodium-dev libssl-dev libreadline-dev libhidapi-dev libusb-1.0-0-dev python3 pkg-config libsqlite3-dev qttools5-dev libcurl4-openssl-dev gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DDOWNLOAD_SODIUM=ON -DARCH_ID=armhf",
            "ninja -j1 rpc wallet -v",
            "ninja -j2 daemon device_trezor -v",
            "ninja -j1 wallet_rpc_server -v",
            "ninja -j2 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "arm32v7/debian:buster",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Static (bionic amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++-8 autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=ON -DBUILD_STATIC_DEPS=ON -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DARCH=x86-64",
            "ninja -j6 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/oxend --offline --data-dir=startuptest",
            "../utils/build_scripts/drone-check-static-libs.sh",
            "ninja strip_binaries",
            "ninja create_tarxz",
            "../utils/build_scripts/drone-static-upload.sh"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:bionic",
         "name": "build"
      },
      {
         "commands": [
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends git ssh curl ca-certificates binutils make",
            "curl -sSL https://deb.nodesource.com/setup_14.x | bash -",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q update",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y nodejs",
            "git clone https://github.com/loki-project/loki-electron-gui-wallet.git",
            "cp -v build/bin/oxend loki-electron-gui-wallet/bin",
            "cp -v build/bin/oxen-wallet-rpc loki-electron-gui-wallet/bin",
            "cd loki-electron-gui-wallet",
            "eatmydata npm install",
            "sed -i -e 's/^\\\\( *\"version\": \".*\\\\)\",/\\\\\\\\1-${DRONE_COMMIT_SHA:0:8}\",/' package.json",
            "eatmydata npm run build",
            "../utils/build_scripts/drone-wallet-upload.sh"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:bionic",
         "name": "GUI Wallet (dev)",
         "platform": {
            "arch": "amd64"
         }
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "Static (win64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++ g++-mingw-w64-x86-64 autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DCMAKE_TOOLCHAIN_FILE=../cmake/64-bit-toolchain.cmake -DBUILD_STATIC_DEPS=ON -DARCH=x86-64",
            "ninja -j6 -v",
            "ninja strip_binaries",
            "ninja create_zip",
            "../utils/build_scripts/drone-static-upload.sh"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:focal",
         "name": "build"
      },
      {
         "commands": [
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "dpkg --add-architecture i386",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends git ssh curl ca-certificates binutils make wine32 wine sed",
            "curl -sSL https://deb.nodesource.com/setup_14.x | bash -",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q update",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y nodejs",
            "git clone https://github.com/loki-project/loki-electron-gui-wallet.git",
            "cp -v build/bin/oxend.exe loki-electron-gui-wallet/bin",
            "cp -v build/bin/oxen-wallet-rpc.exe loki-electron-gui-wallet/bin",
            "cd loki-electron-gui-wallet",
            "eatmydata npm install",
            "sed -i -e 's/^\\\\( *\"version\": \".*\\\\)\",/\\\\\\\\1-${DRONE_COMMIT_SHA:0:8}\",/' package.json",
            "sed -i -e 's/^\\\\( *\"build\": \"quasar.*\\\\)\",/\\\\\\\\1 --target=win\",/' package.json",
            "eatmydata npm run build",
            "../utils/build_scripts/drone-wallet-upload.sh"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:stable",
         "name": "GUI Wallet (dev)",
         "platform": {
            "arch": "amd64"
         }
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "macOS (Static)",
   "platform": {
      "arch": "amd64",
      "os": "darwin"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "name": "submodules"
      },
      {
         "commands": [
            "export SDKROOT=\"$(xcrun --sdk macosx --show-sdk-path)\"",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fcolor-diagnostics -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=ON -DBUILD_STATIC_DEPS=ON -DARCH=core2 -DARCH_ID=amd64",
            "ninja -j6 -v",
            "../utils/build_scripts/drone-check-static-libs.sh",
            "ninja strip_binaries",
            "ninja create_tarxz",
            "../utils/build_scripts/drone-static-upload.sh"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "build"
      },
      {
         "commands": [
            "git clone https://github.com/loki-project/loki-electron-gui-wallet.git",
            "cp -v build/bin/{oxend,oxen-wallet-rpc} loki-electron-gui-wallet/bin",
            "cd loki-electron-gui-wallet",
            "sed -i -e 's/^\\\\( *\"version\": \".*\\\\)\",/\\\\1-${DRONE_COMMIT_SHA:0:8}\",/' package.json",
            "npm install",
            "npm run build",
            "../utils/build_scripts/drone-wallet-upload.sh"
         ],
         "environment": {
            "CSC_IDENTITY_AUTO_DISCOVERY": "false",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "GUI Wallet (dev)",
         "platform": {
            "arch": "amd64",
            "os": "darwin"
         }
      }
   ],
   "type": "exec"
}
---
{
   "kind": "pipeline",
   "name": "macOS (Release)",
   "platform": {
      "arch": "amd64",
      "os": "darwin"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "name": "submodules"
      },
      {
         "commands": [
            "export SDKROOT=\"$(xcrun --sdk macosx --show-sdk-path)\"",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fcolor-diagnostics -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON ",
            "ninja -j6 -v",
            "mkdir -v -p $$HOME/.oxen",
            "GTEST_COLOR=1 ctest --output-on-failure -j6"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "build"
      }
   ],
   "type": "exec"
}
---
{
   "kind": "pipeline",
   "name": "macOS (Debug)",
   "platform": {
      "arch": "amd64",
      "os": "darwin"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "name": "submodules"
      },
      {
         "commands": [
            "export SDKROOT=\"$(xcrun --sdk macosx --show-sdk-path)\"",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fcolor-diagnostics -DCMAKE_BUILD_TYPE=Debug -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=OFF -DBUILD_TESTS=ON -DBUILD_DEBUG_UTILS=ON",
            "ninja -j6 -v"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "build"
      }
   ],
   "type": "exec"
}
---
{
   "kind": "pipeline",
   "name": "Android wallet_api",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "echo deb http://deb.debian.org/debian sid contrib >/etc/apt/sources.list.d/sid-contrib.list",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "if [ -d /cache ]; then if ! [ -d /cache/google-android-ndk-installer ]; then mkdir /cache/google-android-ndk-installer; fi; ln -s /cache/google-android-ndk-installer /var/cache/; fi",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake g++ git ninja-build ccache tar xz-utils google-android-ndk-installer autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client",
            "mkdir build-armeabi-v7a",
            "cd build-armeabi-v7a",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=armeabi-v7a -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=armv7-a -DARCH_ID=arm32",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "mkdir build-arm64-v8a",
            "cd build-arm64-v8a",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=arm64-v8a -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=armv8-a -DARCH_ID=arm64",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "mkdir build-x86_64",
            "cd build-x86_64",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=x86_64 -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=\"x86-64 -msse4.2 -mpopcnt\" -DARCH_ID=x86-64",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "./utils/build_scripts/drone-android-static-upload.sh armeabi-v7a arm64-v8a x86_64"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}
---
{
   "kind": "pipeline",
   "name": "iOS wallet_api",
   "platform": {
      "arch": "amd64",
      "os": "darwin"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1",
            "mkdir -p build/{arm64,sim64}",
            "cd build/arm64",
            "cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=../../cmake/ios.toolchain.cmake -DPLATFORM=OS -DDEPLOYMENT_TARGET=11 -DENABLE_VISIBILITY=ON -DENABLE_BITCODE=OFF -DSTATIC=ON -DBUILD_STATIC_DEPS=ON -DUSE_LTO=OFF -DCMAKE_BUILD_TYPE=Release -DRANDOMX_ENABLE_JIT=OFF -DCMAKE_CXX_FLAGS=-fcolor-diagnostics",
            "ninja -j6 -v wallet_merged",
            "cd ../sim64",
            "cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=../../cmake/ios.toolchain.cmake -DPLATFORM=SIMULATOR64 -DDEPLOYMENT_TARGET=11 -DENABLE_VISIBILITY=ON -DENABLE_BITCODE=OFF -DSTATIC=ON -DBUILD_STATIC_DEPS=ON -DUSE_LTO=OFF -DCMAKE_BUILD_TYPE=Release -DRANDOMX_ENABLE_JIT=OFF -DCMAKE_CXX_FLAGS=-fcolor-diagnostics",
            "ninja -j6 -v wallet_merged",
            "cd ../..",
            "./utils/build_scripts/drone-ios-static-upload.sh"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "build"
      }
   ],
   "type": "exec"
}
